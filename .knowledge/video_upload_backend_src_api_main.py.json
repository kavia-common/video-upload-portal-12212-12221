{"is_source_file": true, "format": "Python", "description": "This is a FastAPI backend source file implementing a video upload service. It includes endpoints for health checks and video file uploads, manages an upload directory, enforces size limits, and handles errors.", "external_files": ["fastapi", "pydantic", "os", "pathlib.Path"], "external_methods": ["FastAPI()", "File", "UploadFile", "HTTPException", "Depends", "Request", "status", "CORSMiddleware", "JSONResponse", "BaseModel", "Field"], "published": ["health_check", "upload_video"], "classes": [{"name": "HealthResponse", "description": "Pydantic model for health check response."}, {"name": "UploadSuccessResponse", "description": "Pydantic model for successful upload response."}, {"name": "ErrorResponse", "description": "Pydantic model for error responses."}], "methods": [{"name": "None ensure_upload_dir_exists()", "description": "Creates the upload directory if it does not exist and sets permissions.", "scope": "", "scopeKind": ""}, {"name": "HealthResponse health_check()", "description": "Endpoint for health status check.", "scope": "", "scopeKind": ""}, {"name": "Optional[int] _validate_content_length(request: Request)", "description": "Validates 'Content-Length' header to restrict upload size before processing.", "scope": "", "scopeKind": ""}, {"name": "UploadSuccessResponse upload_video( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )", "description": "Handles video file uploads, saves file to disk, enforces size limits during streaming.", "scope": "", "scopeKind": ""}, {"name": "http_exception_handler(_, exc: HTTPException)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["ensure_upload_dir_exists()", "os.chmod()", "Path.mkdir()", "destination_path.open()", "file.read()", "destination_path.unlink()", "file.close()"], "search-terms": ["video upload", "FastAPI upload endpoint", "Content-Length validation", "upload directory creation", "file size limit", "save uploaded file", "video upload backend", "video upload API", "health check endpoint"], "state": 2, "file_id": 3, "knowledge_revision": 10, "git_revision": "d96378dfaaaca2948da948da454af4f0ac1f5229", "revision_history": [{"9": "d96378dfaaaca2948da948da454af4f0ac1f5229"}, {"10": "d96378dfaaaca2948da948da454af4f0ac1f5229"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_VIDEO_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = Path(\"\\/upload\")  # As per requirements$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadSuccessResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class UploadSuccessResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_validate_content_length", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def _validate_content_length(request: Request) -> Optional[int]:$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"Error description\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "ensure_upload_dir_exists", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def ensure_upload_dir_exists() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Saved filename\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def health_check() -> HealthResponse:$/", "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(_, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(_, exc: HTTPException)"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Health check message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Success message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video($/", "language": "Python", "typeref": "typename:UploadSuccessResponse", "kind": "function", "signature": "( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )"}], "hash": "252ba5c9dd3e85324daad17760008e15", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = Path(\"\\/upload\")  # As per requirements", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}]}