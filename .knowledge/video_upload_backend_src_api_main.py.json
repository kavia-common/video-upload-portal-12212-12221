{"is_source_file": true, "format": "Python", "description": "This is a FastAPI application source code for a video upload backend service. It defines API endpoints for health checks and video file uploads, handles directory creation and permission setting, enforces size limits during upload, and uses Pydantic models for request/response schemas.", "external_files": ["os", "pathlib.Path", "typing.Optional", "fastapi.FastAPI", "fastapi.File", "fastapi.UploadFile", "fastapi.HTTPException", "fastapi.Depends", "fastapi.Request", "fastapi.status", "fastapi.middleware.cors.CORSMiddleware", "fastapi.responses.JSONResponse", "pydantic.BaseModel", "pydantic.Field"], "external_methods": ["os.chmod", "os.path.basename", "Path.mkdir", "Path.unlink"], "published": ["health_check", "upload_video"], "classes": [{"name": "HealthResponse", "description": "Data model for health check response, contains a message string."}, {"name": "UploadSuccessResponse", "description": "Data model for successful upload response, includes filename, size in bytes, and a message."}, {"name": "ErrorResponse", "description": "Data model for error responses, contains a detail string."}], "methods": [{"name": "None ensure_upload_dir_exists()", "description": "Creates the upload directory if it does not exist and attempts to set directory permissions.", "scope": "", "scopeKind": ""}, {"name": "HealthResponse health_check()", "description": "API endpoint that returns a simple health status message.", "scope": "", "scopeKind": ""}, {"name": "Optional[int] _validate_content_length(request: Request)", "description": "Validates the 'Content-Length' header to enforce maximum upload size if present.", "scope": "", "scopeKind": ""}, {"name": "UploadSuccessResponse upload_video( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )", "description": "Handles video file upload: validates, streams to disk, enforces size limit, and responds with upload details.", "scope": "", "scopeKind": ""}, {"name": "http_exception_handler(_, exc: HTTPException)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["ensure_upload_dir_exists", "os.chmod", "os.path.basename", "destination_path.open", "file.read", "destination_path.unlink", "file.close"], "search-terms": ["video upload", "endpoint", "upload directory", "size enforcement", "FastAPI", "file streaming", "upload file", "content-length validation"], "state": 2, "file_id": 3, "knowledge_revision": 16, "git_revision": "86cf30b3c778dfc9d3dd826434b53481c1777779", "revision_history": [{"9": "d96378dfaaaca2948da948da454af4f0ac1f5229"}, {"10": "d96378dfaaaca2948da948da454af4f0ac1f5229"}, {"15": "71dbc1bdf549906ffa8991d84cb79f611817bfc9"}, {"16": "86cf30b3c778dfc9d3dd826434b53481c1777779"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_VIDEO_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = Path(\"\\/upload\")  # Updated as per new requirements$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadSuccessResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class UploadSuccessResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_validate_content_length", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def _validate_content_length(request: Request) -> Optional[int]:$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"Error description\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "ensure_upload_dir_exists", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def ensure_upload_dir_exists() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Saved filename\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def health_check() -> HealthResponse:$/", "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(_, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(_, exc: HTTPException)"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Health check message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Success message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video($/", "language": "Python", "typeref": "typename:UploadSuccessResponse", "kind": "function", "signature": "( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )"}], "hash": "573d859fbe905ecfd56f2d4581d68f78", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = Path(\"\\/upload\")  # Updated as per new requirements", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}]}