{"is_source_file": true, "format": "Python", "description": "This is a FastAPI backend server file that manages video uploads, including endpoints for health checks and file uploads. It enforces size limits (up to 500MB), creates necessary directories, and streams files for saving to disk.", "external_files": ["fastapi", "pydantic", "os", "pathlib"], "external_methods": ["fastapi.FastAPI", "fastapi.File", "fastapi.UploadFile", "fastapi.HTTPException", "fastapi.Depends", "fastapi.Request", "fastapi.status", "fastapi.middleware.CorsMiddleware", "fastapi.responses.JSONResponse", "pydantic.BaseModel", "pydantic.Field", "os.path.basename", "os.chmod", "os.unlink", "pathlib.Path", "async file.read"], "published": ["app", "health_check", "upload_video"], "classes": [{"name": "HealthResponse", "description": "Pydantic model for health check response."}, {"name": "UploadSuccessResponse", "description": "Pydantic model for successful upload response."}, {"name": "ErrorResponse", "description": "Pydantic model for error responses."}], "methods": [{"name": "None ensure_upload_dir_exists()", "description": "Creates the upload directory if it does not exist and sets permissions.", "scope": "", "scopeKind": ""}, {"name": "HealthResponse health_check()", "description": "Provides a health status endpoint for service health checks.", "scope": "", "scopeKind": ""}, {"name": "Optional[int] _validate_content_length(request: Request)", "description": "Validates the Content-Length header to enforce maximum upload size.", "scope": "", "scopeKind": ""}, {"name": "UploadSuccessResponse upload_video( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )", "description": "Handles video file uploads, streams data to disk, enforces size constraints, and returns upload info.", "scope": "", "scopeKind": ""}, {"name": "http_exception_handler(_, exc: HTTPException)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.chmod", "os.unlink", "Path.mkdir", "Path.open", "file.read", "file.close", "ensure_upload_dir_exists"], "search-terms": ["FastAPI", "video upload", "file size limit", "upload endpoint", "directory creation", "streaming write", "health check", "upload response"], "state": 2, "file_id": 3, "knowledge_revision": 15, "git_revision": "71dbc1bdf549906ffa8991d84cb79f611817bfc9", "revision_history": [{"9": "d96378dfaaaca2948da948da454af4f0ac1f5229"}, {"10": "d96378dfaaaca2948da948da454af4f0ac1f5229"}, {"15": "71dbc1bdf549906ffa8991d84cb79f611817bfc9"}], "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MAX_VIDEO_SIZE_BYTES", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UPLOAD_DIR", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^UPLOAD_DIR = Path(\"\\/src\\/upload\")  # As per requirements$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "UploadSuccessResponse", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^class UploadSuccessResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_validate_content_length", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def _validate_content_length(request: Request) -> Optional[int]:$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    detail: str = Field(..., description=\"Error description\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "ensure_upload_dir_exists", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def ensure_upload_dir_exists() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "filename", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    filename: str = Field(..., description=\"Saved filename\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^def health_check() -> HealthResponse:$/", "language": "Python", "typeref": "typename:HealthResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(_, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(_, exc: HTTPException)"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Health check message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    message: str = Field(..., description=\"Success message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "size_bytes", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^    size_bytes: int = Field(..., description=\"Size of the uploaded file in bytes\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UploadSuccessResponse", "scopeKind": "class"}, {"_type": "tag", "name": "upload_video", "path": "/home/kavia/workspace/code-generation/video-upload-portal-12212-12221/video_upload_backend/src/api/main.py", "pattern": "/^async def upload_video($/", "language": "Python", "typeref": "typename:UploadSuccessResponse", "kind": "function", "signature": "( request: Request, _: Optional[int] = Depends(_validate_content_length), file: UploadFile = File( ..., description=\"The video file to upload. Maximum size: 500MB.\", ), )"}], "hash": "4e071befc874f1a3dd45bc8a587334dd", "format-version": 4, "code-base-name": "video_upload_backend", "filename": "video_upload_backend/src/api/main.py", "fields": [{"name": "MAX_VIDEO_SIZE_BYTES = 500 * 1024 * 1024  # 500MB", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UPLOAD_DIR = Path(\"\\/src\\/upload\")  # As per requirements", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str detail", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str filename", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int size_bytes", "scope": "UploadSuccessResponse", "scopeKind": "class", "description": "unavailable"}]}